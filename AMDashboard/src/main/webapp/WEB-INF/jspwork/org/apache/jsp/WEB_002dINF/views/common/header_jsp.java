/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-09-07 03:30:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1598427227931L));
    _jspx_dependants.put("jar:file:/C:/workspace/adminAM/AMDashboard/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write(" ");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <meta charset=\"utf-8\" />\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/img/apple-icon.png\">\r\n");
      out.write("  <link rel=\"icon\" type=\"image/png\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/img/favicon.png\">\r\n");
      out.write("   <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("    <meta name=\"description\" content=\"\" />\r\n");
      out.write("    <meta name=\"author\" content=\"\" />\r\n");
      out.write("    \r\n");
      out.write("    <!-- context Path를 프로젝트 전체에서 간단히 사용할 수 있도록 변수 선언 -->\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!--     Fonts and icons     -->\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Poppins:200,300,400,600,700,800\" rel=\"stylesheet\" />\r\n");
      out.write("  <link href=\"https://use.fontawesome.com/releases/v5.0.6/css/all.css\" rel=\"stylesheet\">\r\n");
      out.write("  <!-- Nucleo Icons -->\r\n");
      out.write("  <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/nucleo-icons.css\" rel=\"stylesheet\" />\r\n");
      out.write("  <!-- CSS Files -->\r\n");
      out.write("  <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/black-dashboard.css?v=1.0.0\" rel=\"stylesheet\" />\r\n");
      out.write("  <!-- CSS Just for demo purpose, don't include it in your project -->\r\n");
      out.write("  <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/demo/demo.css\" rel=\"stylesheet\" />\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Navbar -->\r\n");
      out.write("      <nav class=\"navbar navbar-expand-lg navbar-absolute navbar-transparent\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"navbar-wrapper\">\r\n");
      out.write("            <div class=\"navbar-toggle d-inline\">\r\n");
      out.write("              <button type=\"button\" class=\"navbar-toggler\">\r\n");
      out.write("                <span class=\"navbar-toggler-bar bar1\"></span>\r\n");
      out.write("                <span class=\"navbar-toggler-bar bar2\"></span>\r\n");
      out.write("                <span class=\"navbar-toggler-bar bar3\"></span>\r\n");
      out.write("              </button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <a class=\"navbar-brand\" href=\"javascript:void(0)\">Dashboard</a>\r\n");
      out.write("          </div>\r\n");
      out.write("          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigation\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n");
      out.write("            <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n");
      out.write("            <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n");
      out.write("          </button>\r\n");
      out.write("          <div class=\"collapse navbar-collapse\" id=\"navigation\">\r\n");
      out.write("            <ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("              <li class=\"search-bar input-group\">\r\n");
      out.write("                <button class=\"btn btn-link\" id=\"search-button\" data-toggle=\"modal\" data-target=\"#searchModal\"><i class=\"tim-icons icon-zoom-split\" ></i>\r\n");
      out.write("                  <span class=\"d-lg-none d-md-block\">Search</span>\r\n");
      out.write("                </button>\r\n");
      out.write("              </li>\r\n");
      out.write("             \r\n");
      out.write("              <li class=\"dropdown nav-item\">\r\n");
      out.write("                <a href=\"#\" class=\"dropdown-toggle nav-link\" data-toggle=\"dropdown\">\r\n");
      out.write("                  <div class=\"photo\">\r\n");
      out.write("                    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/img/anime3.png\" alt=\"Profile Photo\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <b class=\"caret d-none d-lg-block d-xl-block\"></b>\r\n");
      out.write("                  <p class=\"d-lg-none\">\r\n");
      out.write("                    Log out\r\n");
      out.write("                  </p>\r\n");
      out.write("                </a>\r\n");
      out.write("                <ul class=\"dropdown-menu dropdown-navbar\">\r\n");
      out.write("                  <li class=\"nav-link\"><a href=\"javascript:void(0)\" class=\"nav-item dropdown-item\">Profile</a></li>\r\n");
      out.write("                  <li class=\"nav-link\"><a href=\"javascript:void(0)\" class=\"nav-item dropdown-item\">Settings</a></li>\r\n");
      out.write("                  <li class=\"dropdown-divider\"></li>\r\n");
      out.write("                  <li class=\"nav-link\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/logout\" class=\"nav-item dropdown-item\">Log out</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("              </li>\r\n");
      out.write("              <li class=\"separator d-lg-none\"></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </nav>\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"wrapper\">\r\n");
      out.write("    <div class=\"sidebar\">\r\n");
      out.write("      <!--\r\n");
      out.write("        Tip 1: You can change the color of the sidebar using: data-color=\"blue | green | orange | red\"\r\n");
      out.write("    -->\r\n");
      out.write("      <div class=\"sidebar-wrapper\">\r\n");
      out.write("        <div class=\"logo\">\r\n");
      out.write("          <a href=\"javascript:void(0)\" class=\"simple-text logo-mini\">\r\n");
      out.write("            CT\r\n");
      out.write("          </a>\r\n");
      out.write("          <a href=\"javascript:void(0)\" class=\"simple-text logo-normal\">\r\n");
      out.write("            Creative Tim\r\n");
      out.write("          </a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <ul class=\"nav\">\r\n");
      out.write("          <li class=\"active \">\r\n");
      out.write("            <a href=\"./dashboard.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-chart-pie-36\"></i>\r\n");
      out.write("              <p>Dashboard</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"./icons.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-atom\"></i>\r\n");
      out.write("              <p>회원 인증</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberList\">\r\n");
      out.write("              <i class=\"tim-icons icon-single-02\"></i>\r\n");
      out.write("              <p>회원 관리</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"./map.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-pin\"></i>\r\n");
      out.write("              <p>Maps</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"./notifications.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-bell-55\"></i>\r\n");
      out.write("              <p>Notifications</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"./tables.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-puzzle-10\"></i>\r\n");
      out.write("              <p>Table List</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"./typography.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-align-center\"></i>\r\n");
      out.write("              <p>Typography</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li>\r\n");
      out.write("            <a href=\"./rtl.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-world\"></i>\r\n");
      out.write("              <p>RTL Support</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li class=\"active-pro\">\r\n");
      out.write("            <a href=\"./upgrade.html\">\r\n");
      out.write("              <i class=\"tim-icons icon-spaceship\"></i>\r\n");
      out.write("              <p>Upgrade to PRO</p>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("      \r\n");
      out.write("      <!--   Core JS Files   -->\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/core/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/core/bootstrap.min.js\"></script>\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/plugins/perfect-scrollbar.jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- Chart JS -->\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/plugins/chartjs.min.js\"></script>\r\n");
      out.write("  <!--  Notifications Plugin    -->\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/plugins/bootstrap-notify.js\"></script>\r\n");
      out.write("  <!-- Control Center for Black Dashboard: parallax effects, scripts for the example pages etc -->\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/black-dashboard.min.js?v=1.0.0\"></script><!-- Black Dashboard DEMO methods, don't include it in your project! -->\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/demo/demo.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  <script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("      $().ready(function() {\r\n");
      out.write("        $sidebar = $('.sidebar');\r\n");
      out.write("        $navbar = $('.navbar');\r\n");
      out.write("        $main_panel = $('.main-panel');\r\n");
      out.write("\r\n");
      out.write("        $full_page = $('.full-page');\r\n");
      out.write("\r\n");
      out.write("        $sidebar_responsive = $('body > .navbar-collapse');\r\n");
      out.write("        sidebar_mini_active = true;\r\n");
      out.write("        white_color = false;\r\n");
      out.write("\r\n");
      out.write("        window_width = $(window).width();\r\n");
      out.write("\r\n");
      out.write("        fixed_plugin_open = $('.sidebar .sidebar-wrapper .nav li.active a p').html();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        $('.fixed-plugin a').click(function(event) {\r\n");
      out.write("          if ($(this).hasClass('switch-trigger')) {\r\n");
      out.write("            if (event.stopPropagation) {\r\n");
      out.write("              event.stopPropagation();\r\n");
      out.write("            } else if (window.event) {\r\n");
      out.write("              window.event.cancelBubble = true;\r\n");
      out.write("            }\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.fixed-plugin .background-color span').click(function() {\r\n");
      out.write("          $(this).siblings().removeClass('active');\r\n");
      out.write("          $(this).addClass('active');\r\n");
      out.write("\r\n");
      out.write("          var new_color = $(this).data('color');\r\n");
      out.write("\r\n");
      out.write("          if ($sidebar.length != 0) {\r\n");
      out.write("            $sidebar.attr('data', new_color);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          if ($main_panel.length != 0) {\r\n");
      out.write("            $main_panel.attr('data', new_color);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          if ($full_page.length != 0) {\r\n");
      out.write("            $full_page.attr('filter-color', new_color);\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          if ($sidebar_responsive.length != 0) {\r\n");
      out.write("            $sidebar_responsive.attr('data', new_color);\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.switch-sidebar-mini input').on(\"switchChange.bootstrapSwitch\", function() {\r\n");
      out.write("          var $btn = $(this);\r\n");
      out.write("\r\n");
      out.write("          if (sidebar_mini_active == true) {\r\n");
      out.write("            $('body').removeClass('sidebar-mini');\r\n");
      out.write("            sidebar_mini_active = false;\r\n");
      out.write("            blackDashboard.showSidebarMessage('Sidebar mini deactivated...');\r\n");
      out.write("          } else {\r\n");
      out.write("            $('body').addClass('sidebar-mini');\r\n");
      out.write("            sidebar_mini_active = true;\r\n");
      out.write("            blackDashboard.showSidebarMessage('Sidebar mini activated...');\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          // we simulate the window Resize so the charts will get updated in realtime.\r\n");
      out.write("          var simulateWindowResize = setInterval(function() {\r\n");
      out.write("            window.dispatchEvent(new Event('resize'));\r\n");
      out.write("          }, 180);\r\n");
      out.write("\r\n");
      out.write("          // we stop the simulation of Window Resize after the animations are completed\r\n");
      out.write("          setTimeout(function() {\r\n");
      out.write("            clearInterval(simulateWindowResize);\r\n");
      out.write("          }, 1000);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.switch-change-color input').on(\"switchChange.bootstrapSwitch\", function() {\r\n");
      out.write("          var $btn = $(this);\r\n");
      out.write("\r\n");
      out.write("          if (white_color == true) {\r\n");
      out.write("\r\n");
      out.write("            $('body').addClass('change-background');\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("              $('body').removeClass('change-background');\r\n");
      out.write("              $('body').removeClass('white-content');\r\n");
      out.write("            }, 900);\r\n");
      out.write("            white_color = false;\r\n");
      out.write("          } else {\r\n");
      out.write("\r\n");
      out.write("            $('body').addClass('change-background');\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("              $('body').removeClass('change-background');\r\n");
      out.write("              $('body').addClass('white-content');\r\n");
      out.write("            }, 900);\r\n");
      out.write("\r\n");
      out.write("            white_color = true;\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.light-badge').click(function() {\r\n");
      out.write("          $('body').addClass('white-content');\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('.dark-badge').click(function() {\r\n");
      out.write("          $('body').removeClass('white-content');\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <script>\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("      // Javascript method's body can be found in assets/js/demos.js\r\n");
      out.write("      demo.initDashboardPageCharts();\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <script src=\"https://cdn.trackjs.com/agent/v3/latest/t.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("    window.TrackJS &&\r\n");
      out.write("      TrackJS.install({\r\n");
      out.write("        token: \"ee6fab19c5a04ac1a32a645abde4613a\",\r\n");
      out.write("        application: \"black-dashboard-free\"\r\n");
      out.write("      });\r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/common/header.jsp(7,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/common/header.jsp(7,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/header.jsp(7,1) '${pageContext.servletContext.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.servletContext.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/common/header.jsp(7,1) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setScope("application");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /WEB-INF/views/common/header.jsp(19,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("contextPath");
      // /WEB-INF/views/common/header.jsp(19,4) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/header.jsp(19,4) '${pageContext.servletContext.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.servletContext.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/common/header.jsp(19,4) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setScope("application");
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
