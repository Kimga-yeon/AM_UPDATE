/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-09-15 06:20:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signUpView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<style>\r\n");
      out.write(".checkBtn {\r\n");
      out.write("\tfont-family: 'S-CoreDream-6Bold';\r\n");
      out.write("\tfont-size: small;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".checkSpan{\r\n");
      out.write("\tfont-family: 'S-CoreDream-4Regular';\r\n");
      out.write("\tfont-size: small;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- ------------------------- header ---------------------------- -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- ------------------------- main ---------------------------- -->\r\n");
      out.write("\t<section class=\"ftco-section bg-light\" id=\"signUp\">\r\n");
      out.write("\t\t<div class=\"overlay\"></div>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"contact-wrap w-100 p-md-5 p-4 justify-content-center col-md-12\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-12 heading-section text-center fadeInUp\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"subheading\">JOIN US</span>\r\n");
      out.write("\t\t\t\t\t\t<h2>회원가입</h2>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-12 p-4\">\r\n");
      out.write("\t\t\t\t\t<form method=\"POST\" action=\"signUp2\" class=\"contactForm mt-5 justify-content-center\" name=\"signUpForm\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t\t\t<!-- ------------------------------------------------------------------- -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"label\" for=\"email\">이메일</label> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"email\" class=\"form-control\" name=\"memberEmail\" id=\"email\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group pt-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"certificate\" class=\"btn btn-primary checkBtn\">인증 확인</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!-- ------------------------------------------------------------------- -->\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-5 mt-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary form-control\">NEXT</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"submitting\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<!-- ------------------------- footer ---------------------------- -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t var signUpCheck = { \r\n");
      out.write("\t\t\t\t\"email\": false,\r\n");
      out.write("\t\t\t\t\"check\": false\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t \r\n");
      out.write("\tvar $email = $(\"#email\");\r\n");
      out.write("\tvar $check = $(\"#certificate\");\r\n");
      out.write("\r\n");
      out.write("\t// 인증 검사\r\n");
      out.write("\t$check.on(\"click\", function(){\r\n");
      out.write("\t\tsignUpCheck.check = true;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif($email.val().trim().length == 0){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tswal({\r\n");
      out.write("\t\t\t\t  title: \"이메일을 입력해주세요.\",\r\n");
      out.write("\t\t\t\t  icon: \"info\",\r\n");
      out.write("\t\t\t\t  button: \"닫기\",\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t$email.focus()\r\n");
      out.write("\t\t\tsignUpCheck.email = false;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"certificate\",\r\n");
      out.write("\t\t\t\tdata : {\"memberEmail\": $email.val()},\r\n");
      out.write("\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\tdataType : \"JSON\",\r\n");
      out.write("\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\tconsole.log(result)\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar title;\r\n");
      out.write("\t\t\t\t\tvar text;\r\n");
      out.write("\t\t\t\t\tvar icon;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(result == null){\r\n");
      out.write("\t\t\t\t\t\ttitle = \"이메일 확인\";\r\n");
      out.write("\t\t\t\t\t\ttext = \"등록되지 않은 이메일 입니다.\";\r\n");
      out.write("\t\t\t\t\t\ticon = \"error\";\r\n");
      out.write("\t\t\t\t\t\tsignUpCheck.email = false;\r\n");
      out.write("\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(result.authCheck == 'N'){\r\n");
      out.write("\t\t\t\t\t\t\ttitle = \"인증 확인\";\r\n");
      out.write("\t\t\t\t\t\t\ttext = \"인증 메일을 확인해 주세요.\";\r\n");
      out.write("\t\t\t\t\t\t\ticon = \"info\";\r\n");
      out.write("\t\t\t\t\t\t\tsignUpCheck.email = false;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}else if(result.authCheck == 'Y'){\r\n");
      out.write("\t\t\t\t\t\t\ttitle = \"인증 완료\";\r\n");
      out.write("\t\t\t\t\t\t\ttext = \"회원가입을 진행해주세요.\";\r\n");
      out.write("\t\t\t\t\t\t\ticon = \"success\";\r\n");
      out.write("\t\t\t\t\t\t\tsignUpCheck.email = true;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\ttitle = \"중복된 이메일\";\r\n");
      out.write("\t\t\t\t\t\t\ttext = \"이미 가입된 이메일 입니다.\";\r\n");
      out.write("\t\t\t\t\t\t\ticon = \"error\";\r\n");
      out.write("\t\t\t\t\t\t\tsignUpCheck.email = false;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tswal({\r\n");
      out.write("\t\t\t\t\t\t  title: title,\r\n");
      out.write("\t\t\t\t\t\t  text : text,\r\n");
      out.write("\t\t\t\t\t\t  icon: icon,\r\n");
      out.write("\t\t\t\t\t\t  button: \"닫기\",\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}, error : function(){\r\n");
      out.write("\t\t\t\t\tconsole.log(\"Ajax 통신 실패\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction validate(){\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var key in signUpCheck){\r\n");
      out.write("\t\t\tif(!signUpCheck[key]){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar msg;\r\n");
      out.write("\t\t\t\tswitch(key){\r\n");
      out.write("\t\t\t\tcase \"email\" : msg = \"이메일을 확인해주세요\"; break;\r\n");
      out.write("\t\t\t\tcase \"check\" : msg = \"인증 확인버튼을 클릭해주세요.\"; break;\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tswal({\r\n");
      out.write("\t\t\t\t\t  title: \"인증 확인\",\r\n");
      out.write("\t\t\t\t\t  text : msg,\r\n");
      out.write("\t\t\t\t\t  icon: \"error\",\r\n");
      out.write("\t\t\t\t\t  button: \"닫기\",\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t};\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
